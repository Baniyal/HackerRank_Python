We can solve this challenge using the .format tool.

"{0:{width}d} {0:{width}o} {0:{width}X} {0:{width}b}".format(i,width = width)

@ 0 is the index indicating which format argument should 
 be placed in that spot.
@ width indicates the padding space between two rows.
@ d,o ,X  and b  converts the string into decimal, octal, hexadecimal
 and binary format, respectively.

Note: Capital X  is used to print the hexadecimal characters in uppercase. 


 example of foramt function
 print("Temp today is {0:0.f} degrees".format(45612.1212))
 this will subsitute the value 
 
 instead of f for float we can also use
 d = decimal
 s = string
 b = binary
 o = octal




CODE:

def fun(N):
    width = len(bin(N)) - 2
    #width indicates the padding space between two variables
    for i in range(1,N+1):
        print "{0:{width}d} {0:{width}o} {0:{width}X} {0:{width}b}".format(i,width = width)

n = input()
fun(n)
